<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.berlin</groupId>
    <artifactId>detect-er</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <java.verion>1.8</java.verion>
        <netlib.java.version>1.1.2</netlib.java.version>
        <junit.version>4.11</junit.version>
        <guava.version>18.0</guava.version>
        <scala.version>2.11.8</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
        <!--<spark.version>2.2.0</spark.version>-->
        <spark.version>2.4.4</spark.version>
        <scala.tools.version>2.11</scala.tools.version>

        <nadeef.path>/Users/visenger/IdeaProjects/DetectEr/lib/nadeef.jar</nadeef.path>
    </properties>


    <dependencies>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.11</artifactId>
            <version>${spark.version}</version>
        </dependency>
       <!-- <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.tools.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>-->

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.11</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>all</artifactId>
            <version>${netlib.java.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.binary.version}</artifactId>
            <version>3.3.0</version>
        </dependency>


        <!--<dependency>-->
            <!--<groupId>org.scalanlp</groupId>-->
            <!--<artifactId>breeze-viz_2.11</artifactId>-->
            <!--<version>0.13</version>-->
        <!--</dependency>-->


        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1200-jdbc41</version>
        </dependency>

        <dependency>
            <groupId>com.github.mpkorstanje</groupId>
            <artifactId>simmetrics-core</artifactId>
            <version>4.1.1</version>
        </dependency>

        <!-- local: nadeef jar-->
        <dependency>
            <groupId>nadeef</groupId>
            <artifactId>nadeef</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${nadeef.path}</systemPath>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.12</version>
                </plugin>

                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.2.1</version>
                    <configuration>
                        <recompileMode>incremental</recompileMode>
                        <!--<args>-->
                        <!--<arg>-target:jvm-1.8</arg>-->
                        <!--</args>-->
                        <!--<javacArgs>-->
                        <!--<javacArg>-source</javacArg>-->
                        <!--<javacArg>1.8</javacArg>-->
                        <!--<javacArg>-target</javacArg>-->
                        <!--<javacArg>1.8</javacArg>-->
                        <!--</javacArgs>-->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.0.2</version>
                </plugin>


            </plugins>
        </pluginManagement>

        <plugins>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-scala-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/scala</source>
                            </sources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <!--solving  java.lang.OutOfMemoryError: GC overhead limit exceeded problem-->
                <configuration>
                    <jvmArgs>
                        <jvmArg>-Xmx4g</jvmArg>
                        <jvmArg>-Xms256m</jvmArg>
                    </jvmArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>-->
            <!--<artifactId>maven-compiler-plugin</artifactId>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>default-compile</id>-->
            <!--<phase>none</phase>-->
            <!--</execution>-->
            <!--<execution>-->
            <!--<id>default-testCompile</id>-->
            <!--<phase>none</phase>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>


        </plugins>
    </build>


</project>